jobs:
  - job: 'build_and_test_java'
    displayName: 'Build & Test'
    # Strategy for the job
    strategy:
      matrix:
        'java-11':
          image: 'Ubuntu-22.04'
          jdk_version: '11'
          main_build: 'true'
        'java-17':
          image: 'Ubuntu-22.04'
          jdk_version: '17'
          main_build: 'false'
    # Set timeout for jobs
    timeoutInMinutes: 60
    # Base system
    pool:
      vmImage: $(image)
    # Variables
    variables:
      MVN_CACHE_FOLDER: $(HOME)/.m2/repository
      MVN_ARGS: '-e -V -B'
    # Pipeline steps
    steps:
      # Get cached Maven repository
      - template: "../steps/maven_cache.yaml"
      - template: '../steps/setup_java.yaml'
        parameters:
          JDK_VERSION: $(jdk_version)
      - bash: "make spotbugs"
        displayName: "Spotbugs"
        env:
          MVN_ARGS: "-e -V -B"
      - bash: ".azure/scripts/java-build.sh"
        displayName: "Build & Test Java"
        env:
          BUILD_REASON: $(Build.Reason)
          BRANCH: $(Build.SourceBranch)
          TESTCONTAINERS_RYUK_DISABLED: "TRUE"
          TESTCONTAINERS_CHECKS_DISABLE: "TRUE"
          MVN_ARGS: "-e -V -B"
      # We have to TAR the target directory to maintain the permissions of
      # the files which would otherwise change when downloading the artifact
      - bash: tar -cvpf target.tar ./target
        displayName: "Tar the target directory"
        condition: and(succeeded(), eq(variables['main_build'], 'true'))
      - publish: $(System.DefaultWorkingDirectory)/target.tar
        artifact: Binary
        condition: and(succeeded(), eq(variables['main_build'], 'true'))
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: '**/TEST-*.xml'
          testRunTitle: "Unit & Integration tests"
        condition: always()