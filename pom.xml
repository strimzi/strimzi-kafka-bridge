<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.strimzi</groupId>
	<artifactId>kafka-bridge</artifactId>
	<version>0.25.0-SNAPSHOT</version>

	<name>Strimzi Kafka Bridge</name>
	<description>Bridge that allows HTTP clients to interact with Apache Kafka clusters.</description>
	<url>https://strimzi.io/</url>

	<scm>
		<connection>scm:git:git://github.com/strimzi/strimzi-kafka-bridge.git</connection>
		<developerConnection>scm:git:ssh://github.com:strimzi/strimzi-kafka-bridge.git</developerConnection>
		<url>https://github.com/strimzi/strimzi-kafka-bridge</url>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/strimzi/strimzi-kafka-bridge/issues</url>
	</issueManagement>

	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Tom Bentley</name>
			<email>tbentley@redhat.com</email>
			<organization>Red Hat</organization>
			<organizationUrl>https://www.redhat.com</organizationUrl>
		</developer>
		<developer>
			<name>Paolo Patierno</name>
			<email>ppatierno@live.com</email>
			<organization>Red Hat</organization>
			<organizationUrl>https://www.redhat.com</organizationUrl>
		</developer>
		<developer>
			<name>Jakub Scholz</name>
			<email>github@scholzj.com</email>
			<organization>Red Hat</organization>
			<organizationUrl>https://www.redhat.com</organizationUrl>
		</developer>
		<developer>
			<name>Sam Hawker</name>
			<email>sam.b.hawker@gmail.com</email>
			<organization>IBM</organization>
			<organizationUrl>https://www.ibm.com</organizationUrl>
		</developer>
		<developer>
			<name>Jakub Stejskal</name>
			<email>xstejs24@gmail.com</email>
			<organization>Red Hat</organization>
			<organizationUrl>https://www.redhat.com</organizationUrl>
		</developer>
		<developer>
			<name>Stanislav Knot</name>
			<email>sknot@redhat.com</email>
			<organization>Red Hat</organization>
			<organizationUrl>https://www.redhat.com</organizationUrl>
		</developer>
	</developers>

        <distributionManagement>
                <snapshotRepository>
                        <id>ossrh</id>
                        <url>https://oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
                <repository>
                        <id>ossrh</id>
                        <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
        </distributionManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<log4j.version>2.17.2</log4j.version>
		<slf4j.version>1.7.21</slf4j.version>
		<vertx.version>4.3.8</vertx.version>
		<netty.version>4.1.86.Final</netty.version>
		<kafka.version>3.2.3</kafka.version>
		<kafka-kubernetes-config-provider.version>1.1.0</kafka-kubernetes-config-provider.version>
		<kafka-env-var-config-provider.version>1.1.0</kafka-env-var-config-provider.version>
		<maven.checkstyle.version>3.2.0</maven.checkstyle.version>
		<hamcrest.version>2.2</hamcrest.version>
		<junit.version>5.8.2</junit.version>
		<maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>3.0.0-M7</maven-failsafe-plugin.version>
		<maven.assembly.version>3.4.2</maven.assembly.version>
		<maven.javadoc.version>3.4.1</maven.javadoc.version>
		<maven.source.version>3.2.1</maven.source.version>
		<maven.dependency.version>3.3.0</maven.dependency.version>
		<maven.gpg.version>3.0.1</maven.gpg.version>
		<sonatype.nexus.staging>1.6.7</sonatype.nexus.staging>
		<swagger2markup-plugin.version>1.3.7</swagger2markup-plugin.version>
		<swagger2markup.version>1.3.4</swagger2markup.version>
		<jackson-core.version>2.13.4</jackson-core.version>
		<jackson-databind.version>2.13.4.2</jackson-databind.version>
		<spotbugs.version>4.7.3</spotbugs.version>
		<maven.spotbugs.version>4.7.3.0</maven.spotbugs.version>
		<strimzi-oauth.version>0.11.0</strimzi-oauth.version>
		<jaeger.version>1.8.1</jaeger.version>
		<opentracing.version>0.33.0</opentracing.version>
		<opentracing-kafka-client.version>0.1.15</opentracing-kafka-client.version>
		<opentelemetry.alpha-version>1.19.0-alpha</opentelemetry.alpha-version>
		<opentelemetry.version>1.19.0</opentelemetry.version>
		<micrometer.version>1.9.5</micrometer.version>
		<jmx-prometheus-collector.version>0.17.2</jmx-prometheus-collector.version>
		<prometheus-simpleclient.version>0.16.0</prometheus-simpleclient.version>
		<commons-cli.version>1.4</commons-cli.version>
		<test-container.version>0.102.0</test-container.version>
		<jakarta.version>2.3.2</jakarta.version>
		<snakeyaml.version>1.33</snakeyaml.version>
		<!-- property to skip surefire tests during failsafe execution -->
		<!--suppress UnresolvedMavenProperty -->
		<skip.surefire.tests>${skipTests}</skip.surefire.tests>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web-openapi</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web-validation</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-json-schema</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-micrometer-metrics</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>${kafka.version}</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-codec-http</artifactId>
			<version>${netty.version}</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-common</artifactId>
			<version>${netty.version}</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-buffer</artifactId>
			<version>${netty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs-annotations</artifactId>
			<version>${spotbugs.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.strimzi</groupId>
			<artifactId>kafka-oauth-client</artifactId>
			<version>${strimzi-oauth.version}</version>
		</dependency>
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>${jakarta.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jaegertracing</groupId>
			<artifactId>jaeger-core</artifactId>
			<version>${jaeger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jaegertracing</groupId>
			<artifactId>jaeger-client</artifactId>
			<version>${jaeger.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat</groupId>
					<artifactId>tomcat-annotations-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.annotation</groupId>
					<artifactId>javax.annotation-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.opentracing</groupId>
			<artifactId>opentracing-api</artifactId>
			<version>${opentracing.version}</version>
		</dependency>
		<dependency>
			<groupId>io.opentracing</groupId>
			<artifactId>opentracing-util</artifactId>
			<version>${opentracing.version}</version>
		</dependency>
		<dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>opentracing-kafka-client</artifactId>
			<version>${opentracing-kafka-client.version}</version>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-sdk-extension-autoconfigure</artifactId>
			<version>${opentelemetry.alpha-version}</version>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-api</artifactId>
			<version>${opentelemetry.version}</version>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-context</artifactId>
			<version>${opentelemetry.version}</version>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-semconv</artifactId>
			<version>${opentelemetry.alpha-version}</version>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry.instrumentation</groupId>
			<artifactId>opentelemetry-kafka-clients-2.6</artifactId>
			<version>${opentelemetry.alpha-version}</version>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry.instrumentation</groupId>
			<artifactId>opentelemetry-instrumentation-api-semconv</artifactId>
			<version>${opentelemetry.alpha-version}</version>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-otlp</artifactId>
			<version>${opentelemetry.version}</version>
		</dependency>
		<!--
		Not used directly in the bridge code but brought by Vert.x which is using a pretty old version (1.13.0)
		OpenTelemetry also introduced a breaking change in the API (SdkTraceBuilder.build() method) starting from 1.17.0
		Need to override to a more recent version
		-->
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-sdk-trace</artifactId>
			<version>${opentelemetry.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-opentelemetry</artifactId>
			<version>${vertx.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
			<version>${micrometer.version}</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<version>${micrometer.version}</version>
		</dependency>
		<dependency>
			<groupId>io.prometheus.jmx</groupId>
			<artifactId>collector</artifactId>
			<version>${jmx-prometheus-collector.version}</version>
		</dependency>
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient</artifactId>
			<version>${prometheus-simpleclient.version}</version>
		</dependency>
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient_common</artifactId>
			<version>${prometheus-simpleclient.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>${commons-cli.version}</version>
		</dependency>
		<!-- Kubernetes Configuration Provider for Apache Kafka -->
		<dependency>
			<groupId>io.strimzi</groupId>
			<artifactId>kafka-kubernetes-config-provider</artifactId>
			<version>${kafka-kubernetes-config-provider.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-annotations</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- EnvVar Configuration Provider for Apache Kafka -->
		<dependency>
			<groupId>io.strimzi</groupId>
			<artifactId>kafka-env-var-config-provider</artifactId>
			<version>${kafka-env-var-config-provider.version}</version>
		</dependency>
		<!-- Transitive dependency version overrides for Vulnerabilities: -->
		<!-- overriding version of snakeyaml for prometheus.jmx.collector 0.12.0: Vulnerability: DOS and CVE-2022-41854 -->
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>${snakeyaml.version}</version>
		</dependency>
		<!-- Used only for test in the bridge, but needs to be here because OAuth brings it but a potential Maven bug remove it as runtime if only for test -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-databind.version}</version>
		</dependency>
		<!-- Testing -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-kafka-client</artifactId>
			<version>${vertx.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web-client</artifactId>
			<version>${vertx.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-junit5</artifactId>
			<version>${vertx.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-opentracing</artifactId>
			<version>${vertx.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web-common</artifactId>
			<version>${vertx.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.strimzi</groupId>
			<artifactId>strimzi-test-container</artifactId>
			<version>${test-container.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Required to be able to use the Test Container on different platforms such as Arm based Macs -->
		<!-- Can be removed once the Strimzi Test Container is using new Test Container version (should be in Strimzi Test Container 0.103) -->
		<dependency>
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna</artifactId>
			<version>5.8.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<pluginRepositories>
		<pluginRepository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>jcenter-releases</id>
			<name>jcenter</name>
			<url>https://jcenter.bintray.com</url>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>9.0</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<configuration>
							<configLocation>.checkstyle/checkstyle.xml</configLocation>
							<headerLocation>.checkstyle/java.header</headerLocation>
							<suppressionsLocation>.checkstyle/suppressions.xml</suppressionsLocation>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven.assembly.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/main/assembly/zip.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<trimStackTrace>false</trimStackTrace>
					<skipTests>${skip.surefire.tests}</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<trimStackTrace>false</trimStackTrace>
							<forkCount>0</forkCount>
							<!-- This is workaround for https://issues.apache.org/jira/browse/SUREFIRE-1809 -->
							<useModulePath>false</useModulePath>
							<statelessTestsetReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
								<disable>false</disable>
								<version>3.0</version>
								<usePhrasedFileName>false</usePhrasedFileName>
								<usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
								<usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
								<usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
							</statelessTestsetReporter>
							<consoleOutputReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5ConsoleOutputReporter">
								<disable>false</disable>
								<encoding>UTF-8</encoding>
								<usePhrasedFileName>true</usePhrasedFileName>
							</consoleOutputReporter>
							<statelessTestsetInfoReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoReporter">
								<disable>false</disable>
								<usePhrasedFileName>false</usePhrasedFileName>
								<usePhrasedClassNameInRunning>false</usePhrasedClassNameInRunning>
								<usePhrasedClassNameInTestCaseSummary>true</usePhrasedClassNameInTestCaseSummary>
							</statelessTestsetInfoReporter>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.version}</version>
				<executions>
					<execution>
						<id>analyze</id>
						<goals>
							<goal>analyze-only</goal>
						</goals>
						<configuration>
							<failOnWarning>true</failOnWarning>
								<ignoredNonTestScopedDependencies>
									<!-- OpenTelemetry - The SDK is using this at runtime to load the Vert.x “context storage provider”. To ignore because it is detected as used for test only. -->
									<ignoredNonTestScopedDependency>io.vertx:vertx-opentelemetry</ignoredNonTestScopedDependency>
									<!-- Used only for test in the bridge but needed by OAuth. If left "test" scoped, a potential Maven bug remove it from the runtime -->
									<ignoredNonTestScopedDependencies>com.fasterxml.jackson.core:jackson-databind</ignoredNonTestScopedDependencies>
								</ignoredNonTestScopedDependencies>
								<ignoredUnusedDeclaredDependencies>
									<ignoredUnusedDeclaredDependency>io.strimzi:kafka-env-var-config-provider</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>io.strimzi:kafka-kubernetes-config-provider</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>io.strimzi:kafka-oauth-client</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>org.apache.logging.log4j:log4j-core</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>org.apache.logging.log4j:log4j-slf4j-impl</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>io.jaegertracing:jaeger-client</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>org.yaml:snakeyaml</ignoredUnusedDeclaredDependency> <!-- CVE override -->
									<ignoredUnusedDeclaredDependency>org.apache.tomcat.embed:tomcat-embed-core</ignoredUnusedDeclaredDependency>  <!-- CVE override -->
									<!-- OpenTelemetry - used via classpath configuration -->
									<ignoredUnusedDeclaredDependency>io.opentelemetry:opentelemetry-exporter-otlp</ignoredUnusedDeclaredDependency>
									<!-- Required to be able to use the Test Container on different platforms such as Arm based Macs -->
									<!-- Can be removed once the Strimzi Test Container is using new Test Container version (should be in Strimzi Test Container 0.103) -->
									<ignoredUnusedDeclaredDependency>net.java.dev.jna:jna</ignoredUnusedDeclaredDependency>
									<!-- OpenTelemetry - Vert.x using old version and OpenTelemetry breaking API compatibility. See dependency declaration for details. -->
									<ignoredUnusedDeclaredDependency>io.opentelemetry:opentelemetry-sdk-trace</ignoredUnusedDeclaredDependency>
								</ignoredUnusedDeclaredDependencies>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.version}</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<sourcepath>${project.build.sourceDirectory}:${project.build.directory}/generated-sources/annotations</sourcepath>
							<show>public</show>
							<failOnError>true</failOnError>
							<failOnWarnings>true</failOnWarnings>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${maven.spotbugs.version}</version>
				<dependencies>
					<!-- overwrite dependency on spotbugs if you want to specify the version of˓→spotbugs -->
					<dependency>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs</artifactId>
						<version>${spotbugs.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<effort>Max</effort>
					<!-- Reports all bugs (other values are medium and max) -->
					<threshold>Low</threshold>
					<!-- Produces XML report -->
					<xmlOutput>true</xmlOutput>
					<!-- Configures the directory in which the XML report is created -->
					<spotbugsXmlOutputDirectory>${project.build.directory}/spotbugs</spotbugsXmlOutputDirectory>
					<!-- Configures the file for excluding warnings -->
					<excludeFilterFile>${project.basedir}/.spotbugs/spotbugs-exclude.xml</excludeFilterFile>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>apidoc</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.github.swagger2markup</groupId>
						<artifactId>swagger2markup-maven-plugin</artifactId>
						<version>${swagger2markup-plugin.version}</version>
						<dependencies>
							<dependency>
								<groupId>io.github.swagger2markup</groupId>
								<artifactId>swagger2markup</artifactId>
								<version>${swagger2markup.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<swaggerInput>${project.basedir}/src/main/resources/openapiv2.json</swaggerInput>
							<outputDir>${project.basedir}/documentation/book/api/</outputDir>
							<config>
								<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
							</config>
						</configuration>
						<executions>
							<execution>
								<id>generate-apidoc</id>
								<goals>
									<goal>convertSwagger2markup</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>httpbridge</id>
			<properties>
				<skipTests>false</skipTests>
				<groups>httpbridge</groups>
			</properties>
		</profile>
		<profile>
			<id>ossrh</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<!--suppress UnresolvedMavenProperty -->
				<gpg.executable>${env.GPG_EXECUTABLE}</gpg.executable>
				<!--suppress UnresolvedMavenProperty -->
				<gpg.passphrase>${env.GPG_PASSPHRASE}</gpg.passphrase>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven.gpg.version}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<gpgArguments>
										<arg>--batch</arg>
										<arg>--pinentry-mode</arg>
										<arg>loopback</arg>
									</gpgArguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>${sonatype.nexus.staging}</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>false</autoReleaseAfterClose>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
